------------------------------------------------------------------------------------------------------------------
-- 1. Первый запрос по заданию:
------------------------------------------------------------------------------------------------------------------
-- Сделать выборку всех работников с именем “Серик” из отдела “Снабжение” 
-- с полями ФИО, заработная плата, должность

SELECT E.full_name AS "ФИО", S.salary AS "Заработная плата", P.title AS "Должность" --псевдоним полей для названия столбцов выводимой таблицы
FROM Employees E -- выбираем даннве из таблицы по псевдрнимом Е
JOIN Staff_Info SI ON E.id = SI.employee_id -- объединяем таблицу E по полю 'id' с таблицей SI по полю 'employee_id'
JOIN Positions P ON SI.position_id = P.id -- объединяем таблицу P по полю 'id' с таблицей SI по полю 'position_id'
JOIN Departments D ON SI.department_id = D.id -- объединяем таблицу D по полю 'id' с таблицей SI по полю 'department_id'
JOIN Salary S ON SI.salary_id = S.id -- объединяем таблицу S по полю 'id' с таблицей SI по полю 'salary_id'
WHERE E.full_name LIKE '%Серик%' AND D.name = 'Снабжение'; -- условия выборки из данных объединенных таблиц

------------------------------------------------------------------------------------------------------------------
-- 2. Второй запрос по заданию:
------------------------------------------------------------------------------------------------------------------
-- Посчитать среднюю заработную плату работников по отделам
-- с полями Отдел, средняя заработная плата

SELECT D.name AS "Отдел", ROUND( AVG(S.salary)) AS "Средняя Заработная плата" -- ROUND( AVG(S.salary)) функция AVG расчитывает среднюю, а ROUND округляет
FROM staff_info SI -- выбираем из таблицы по псевдрнимом SI
JOIN Departments D ON SI.department_id = D.id -- объединяем таблицу D по полю 'id' с таблицей SI по полю 'department_id'
JOIN Salary S ON SI.salary_id = S.id -- объединяем таблицу S по полю 'id' с таблицей SI по полю 'salary_id'
GROUP BY D.name -- группируем по названию отделов
ORDER BY D.name; -- сортируем по названию отделов

------------------------------------------------------------------------------------------------------------------
-- 3. третий запрос по заданию:
------------------------------------------------------------------------------------------------------------------
-- Сделать выборку по должностям, в результате которой отобразятся данные, 
-- больше ли средняя ЗП по должности, чем средняя ЗП по всем работникам.
SELECT
    ROUND(SUM(salary)) AS "Сумма ЗП по всем сотрудникам",
    COUNT(DISTINCT si.employee_id) AS "Количество сотрудников",
    ROUND(SUM(salary) / COUNT(DISTINCT si.employee_id)) AS "Средняя ЗП по сотруднику"
FROM staff_info si
JOIN Salary s ON si.salary_id = s.id;


-- средняя ЗП по всем сотрудникам равна 82500


SELECT P.title AS "Должность", ROUND(AVG(s.salary)) AS "Средняя ЗП по должности",
    CASE
        WHEN ROUND(AVG(s.salary)) > 82500 THEN 'Да'
        ELSE 'Нет'
    END AS "Больше ли общей средней ЗП"
FROM Positions P
JOIN staff_info SI ON P.id = SI.position_id
JOIN Salary S ON SI.salary_id = S.id
GROUP BY P.title;

------------------------------------------------------------------------------------------------------------------
-- 4. Четвертый запрос по заданию:
------------------------------------------------------------------------------------------------------------------
-- Сделать представление, в котором собраны данные по должностям 
-- (Должность, в каких отделах встречается эта должность (в виде массива), 
-- список сотрудников, начавших работать в этом отделе не раньше 2021 года 
--(Сгруппировать по отделам) (в формате JSON), средняя заработная плата по должности)

CREATE VIEW PositionData AS
SELECT
    P.title AS "Должность",
    ARRAY_AGG(DISTINCT D.name) AS "Отделы",
    jsonb_object_agg(E.full_name, CASE WHEN si.date_start >= '2021-01-01' 
    THEN SI.date_start ELSE NULL END) AS "Сотрудники",
    ROUND(AVG(S.salary)) AS "Средняя ЗП по должности"
FROM Positions P
JOIN staff_info SI ON P.id = SI.position_id
LEFT JOIN Departments D ON SI.department_id = D.id
LEFT JOIN Employees E ON SI.employee_id = E.id
LEFT JOIN Salary S ON SI.salary_id = S.id
GROUP BY P.id;

-- Запрос содержимого представления

SELECT * FROM PositionData;
